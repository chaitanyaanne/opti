import math
import pulp

def add_pod_constraints(prob, x, df, num_csms, max_accounts_per_csm=83):
    """
    Add POD constraints to a Pulp problem to assign each family of accounts
    (grouped by parent_account_id) to the smallest possible number of CSMs,
    while respecting the maximum per-CSM capacity.
    
    Parameters:
    - prob: Pulp LpProblem object
    - x: dictionary of pulp.LpVariable[(account_idx, csm_idx)]
    - df: pandas DataFrame with at least a 'parent_account_id' column
    - num_csms: total number of CSMs (columns in x)
    - max_accounts_per_csm: max number of accounts a CSM can handle per family (default=83)
    """

    print('Adding POD constraints: prefer single CSM per family; split only when needed.')

    parent_ids = df['parent_account_id'].dropna().unique()
    print(f'Found {len(parent_ids)} unique families')

    for parent_id in parent_ids:
        family_indices = df.index[df['parent_account_id'] == parent_id].tolist()
        family_size = len(family_indices)

        if family_size <= 1:
            continue

        # Minimum number of CSMs needed to serve the family
        required_csms = math.ceil(family_size / max_accounts_per_csm)

        # Binary indicator: y[j] = 1 if CSM j is assigned to this family
        y = pulp.LpVariable.dicts(f"csm_used_{parent_id}", range(num_csms), 0, 1, cat="Binary")

        for j in range(num_csms):
            # If any account is assigned to j, y[j] = 1
            prob += (
                pulp.lpSum(x[i, j] for i in family_indices) <= family_size * y[j],
                f"link_csm_to_family_{parent_id}_{j}"
            )

            # Per-CSM per-family cap
            prob += (
                pulp.lpSum(x[i, j] for i in family_indices) <= max_accounts_per_csm,
                f"family_load_cap_{parent_id}_{j}"
            )

        # Limit to only as many CSMs as needed
        prob += (
            pulp.lpSum(y[j] for j in range(num_csms)) <= required_csms,
            f"limit_csm_count_{parent_id}"
        )

    print('POD constraints added.')
    return prob
